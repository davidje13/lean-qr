{"version":3,"sources":["webpack://lean-qr/webpack/universalModuleDefinition","webpack://lean-qr/webpack/bootstrap","webpack://lean-qr/./src/qr/options/corrections.mjs","webpack://lean-qr/./src/qr/options/masks.mjs","webpack://lean-qr/./src/qr/options/modes.mjs","webpack://lean-qr/./src/structures/Bitmap1D.mjs","webpack://lean-qr/./src/structures/Bitmap2D.mjs","webpack://lean-qr/./src/qr/galoisPolynomial.mjs","webpack://lean-qr/./src/qr/errorCorrection.mjs","webpack://lean-qr/./src/qr/draw.mjs","webpack://lean-qr/./src/qr/score.mjs","webpack://lean-qr/./src/qr/generate.mjs"],"names":["root","factory","exports","module","define","amd","global","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","pixelsForVersion","version","size","total","numAlignment","Math","floor","calculate","data","versions","totalBytes","capacity","ecsize","bsize","totalBlocks","g2n","groups","push","capBits","id","v","names","min","L","M","Q","H","max","fn","x","y","lookup","pos","length","alnum","indexOf","multi","encodings","forEach","enc","numeric","addInt","Number","substr","alphaNumeric","iso8859_1","bytes","TextEncoder","encode","Bitmap1D","constructor","this","byte","index","bits","mask","Boolean","padToByte","Bitmap2D","width","height","step","Uint8Array","ceil","isMasked","setAsMask","setNoMask","xor","xorIfUnmasked","LOG","e","ln","mult256PolyLn","p1Ln","p2Ln","result","j","map","rem256Poly","num","denLn","remainder","set","shift","slice","generators","last","next","interleave","target","offset","blocks","lim","block","calculateEC","versionData","eccs","nBlocks","b","remBinPoly","den","denBits","drawRect","code","x1","y1","x2","y2","drawRectOutline","drawPlacement","drawAlignment","drawCode","path","bit","applyMask","ecId","info","pattern","chk","state","hv","state0","scoreCode","score","undefined","consec","cur","scoreLines","lastV","lastM","curV","curM","countBoxes","countPatterns","totalOn","abs","scoreImbalance","EncodeEnd","baseCache","Map","getBase","has","stepAlignment","vInfo","drawFrame","w","h","dirY","xB","getPath","cached","pickMask","correction","bestMasked","bestMaskScore","POSITIVE_INFINITY","masks","masked","generate","modeData","minCorrectionLevel","correctionNames","maxCorrectionLevel","minVersion","maxVersion","Error","dataLengthBits","correctionData","cl","versionedCorrection"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"lean-qr\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"lean-qr\"] = factory();\n\telse\n\t\troot[\"lean-qr\"] = factory();\n})(global, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","/* eslint-disable array-bracket-spacing, no-multi-spaces, operator-linebreak */\n\nfunction pixelsForVersion(version) {\n  const size = version * 4 + 17;\n  let total = (\n    size * size          // total area\n    - 9 * 9              // TL placement\n    - 9 * 8 * 2          // TR & BL placement\n    - (size - 9 - 8) * 2 // timing pattern\n  );\n  if (version >= 2) {\n    const numAlignment = Math.floor(version / 7) + 2;\n    total -= (\n      5 * 5 * (numAlignment * numAlignment - 3) // alignment blocks\n      - 5 * 2 * (numAlignment - 2) // do not overcount timing pattern/alignment overlap\n    );\n  }\n  if (version >= 7) {\n    total -= 3 * 6 * 2; // version identifiers\n  }\n  return total;\n}\n\nfunction calculate(data) {\n  const versions = [{}];\n  for (let version = 1; version <= 40; ++version) {\n    const totalBytes = Math.floor(pixelsForVersion(version) / 8);\n    const [capacity, ecsize] = data[version - 1];\n    const bsize = Math.floor((capacity * ecsize) / (totalBytes - capacity));\n    const totalBlocks = Math.floor(capacity / bsize);\n    const g2n = capacity - (totalBlocks * bsize);\n    const g1n = totalBlocks - g2n;\n    const groups = [[g1n, bsize]];\n    if (g2n) {\n      groups.push([g2n, bsize + 1]);\n    }\n    versions.push({\n      capBits: capacity * 8,\n      groups,\n      ecsize,\n    });\n  }\n  return versions;\n}\n\n// TODO: identify algorithm for these values\n// Thanks, https://www.thonky.com/qr-code-tutorial/error-correction-table\n\nconst LData = [\n  [  19,  7], [  34, 10], [  55, 15], [  80, 20], [ 108, 26],\n  [ 136, 18], [ 156, 20], [ 194, 24], [ 232, 30], [ 274, 18],\n  [ 324, 20], [ 370, 24], [ 428, 26], [ 461, 30], [ 523, 22],\n  [ 589, 24], [ 647, 28], [ 721, 30], [ 795, 28], [ 861, 28],\n  [ 932, 28], [1006, 28], [1094, 30], [1174, 30], [1276, 26],\n  [1370, 28], [1468, 30], [1531, 30], [1631, 30], [1735, 30],\n  [1843, 30], [1955, 30], [2071, 30], [2191, 30], [2306, 30],\n  [2434, 30], [2566, 30], [2702, 30], [2812, 30], [2956, 30],\n];\n\nconst MData = [\n  [  16, 10], [  28, 16], [  44, 26], [  64, 18], [  86, 24],\n  [ 108, 16], [ 124, 18], [ 154, 22], [ 182, 22], [ 216, 26],\n  [ 254, 30], [ 290, 22], [ 334, 22], [ 365, 24], [ 415, 24],\n  [ 453, 28], [ 507, 28], [ 563, 26], [ 627, 26], [ 669, 26],\n  [ 714, 26], [ 782, 28], [ 860, 28], [ 914, 28], [1000, 28],\n  [1062, 28], [1128, 28], [1193, 28], [1267, 28], [1373, 28],\n  [1455, 28], [1541, 28], [1631, 28], [1725, 28], [1812, 28],\n  [1914, 28], [1992, 28], [2102, 28], [2216, 28], [2334, 28],\n];\n\nconst QData = [\n  [  13, 13], [  22, 22], [  34, 18], [  48, 26], [  62, 18],\n  [  76, 24], [  88, 18], [ 110, 22], [ 132, 20], [ 154, 24],\n  [ 180, 28], [ 206, 26], [ 244, 24], [ 261, 20], [ 295, 30],\n  [ 325, 24], [ 367, 28], [ 397, 28], [ 445, 26], [ 485, 30],\n  [ 512, 28], [ 568, 30], [ 614, 30], [ 664, 30], [ 718, 30],\n  [ 754, 28], [ 808, 30], [ 871, 30], [ 911, 30], [ 985, 30],\n  [1033, 30], [1115, 30], [1171, 30], [1231, 30], [1286, 30],\n  [1354, 30], [1426, 30], [1502, 30], [1582, 30], [1666, 30],\n];\n\nconst HData = [\n  [   9, 17], [  16, 28], [  26, 22], [  36, 16], [  46, 22],\n  [  60, 28], [  66, 26], [  86, 26], [ 100, 24], [ 122, 28],\n  [ 140, 24], [ 158, 28], [ 180, 22], [ 197, 24], [ 223, 24],\n  [ 253, 30], [ 283, 28], [ 313, 28], [ 341, 26], [ 385, 28],\n  [ 406, 30], [ 442, 24], [ 464, 30], [ 514, 30], [ 538, 30],\n  [ 596, 30], [ 628, 30], [ 661, 30], [ 701, 30], [ 745, 30],\n  [ 793, 30], [ 845, 30], [ 901, 30], [ 961, 30], [ 986, 30],\n  [1054, 30], [1096, 30], [1142, 30], [1222, 30], [1276, 30],\n];\n\nexport const data = [\n  { id: 0b01, v: calculate(LData) },\n  { id: 0b00, v: calculate(MData) },\n  { id: 0b11, v: calculate(QData) },\n  { id: 0b10, v: calculate(HData) },\n];\n\nexport const names = {\n  min: 0,\n  L: 0,\n  M: 1,\n  Q: 2,\n  H: 3,\n  max: 3,\n};\n","export default [\n  { id: 0b000, fn: (x, y) => !((x ^ y) & 1) },\n  { id: 0b001, fn: (x, y) => !(y & 1) },\n  { id: 0b010, fn: (x) => !(x % 3) },\n  { id: 0b011, fn: (x, y) => !((x + y) % 3) },\n  { id: 0b100, fn: (x, y) => !((Math.floor(x / 3) ^ Math.floor(y / 2)) & 1) },\n  { id: 0b101, fn: (x, y) => !((x & y & 1) ^ ((x * y) % 3)) },\n  { id: 0b110, fn: (x, y) => !(((x & y & 1) + ((x * y) % 3)) & 1) },\n  { id: 0b111, fn: (x, y) => !((((x ^ y) & 1) + ((x * y) % 3)) & 1) },\n];\n","function lookup(pos, ...data) {\n  for (let i = 0; i < data.length - 1; i += 2) {\n    if (pos < data[i + 1]) {\n      return data[i];\n    }\n  }\n  return data[data.length - 1];\n}\n\nconst alnum = (c) => '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:'.indexOf(c);\n\nexport default {\n  multi: (...encodings) => (data, version) => encodings.forEach((enc) => enc(data, version)),\n\n  numeric: (value) => (data, version) => {\n    data.addInt(0b0001, 4);\n    data.addInt(value.length, lookup(version, 10, 10, 12, 27, 14));\n    let i = 0;\n    for (; i < value.length - 2; i += 3) {\n      data.addInt(Number(value.substr(i, 3)), 10);\n    }\n    if (i < value.length - 1) {\n      data.addInt(Number(value.substr(i, 2)), 7);\n    } else if (i < value.length) {\n      data.addInt(Number(value.substr(i, 1)), 4);\n    }\n  },\n\n  alphaNumeric: (value) => (data, version) => {\n    data.addInt(0b0010, 4);\n    data.addInt(value.length, lookup(version, 9, 10, 11, 27, 13));\n    let i = 0;\n    for (; i < value.length - 1; i += 2) {\n      data.addInt(alnum(value[i]) * 45 + alnum(value[i + 1]), 11);\n    }\n    if (i < value.length) {\n      data.addInt(alnum(value[i]), 6);\n    }\n  },\n\n  iso8859_1: (value) => {\n    const bytes = new TextEncoder('iso-8859-1').encode(value);\n    return (data, version) => {\n      data.addInt(0b0100, 4);\n      data.addInt(bytes.length, lookup(version, 8, 10, 16));\n      for (let i = 0; i < bytes.length; ++i) {\n        data.addInt(bytes[i], 8);\n      }\n    };\n  },\n};\n","export default class Bitmap1D {\n  constructor() {\n    this.data = [];\n  }\n\n  get bits() {\n    return this.data.length;\n  }\n\n  byte(index) {\n    const p = index * 8;\n    let v = 0;\n    for (let i = 0; i < 8; ++i) {\n      v = (v << 1) | this.data[p + i];\n    }\n    return v;\n  }\n\n  addInt(value, bits) {\n    for (let mask = 1 << (bits - 1); mask; mask >>>= 1) {\n      this.data.push(Boolean(value & mask));\n    }\n  }\n\n  padToByte() {\n    for (let i = (this.data.length + 7) & 7; i < 7; ++i) {\n      this.data.push(false);\n    }\n  }\n}\n","export default class Bitmap2D {\n  constructor(width, height) {\n    if (width instanceof Bitmap2D) {\n      this.width = width.width;\n      this.height = width.height;\n      this.step = width.step;\n      this.data = new Uint8Array(width.data);\n    } else {\n      this.width = width;\n      this.height = height;\n      this.step = Math.ceil(width / 4);\n      this.data = new Uint8Array(this.step * this.height);\n    }\n  }\n\n  get(x, y) {\n    return Boolean(this.data[y * this.step + (x >> 2)] & (0b01 << ((x & 3) * 2)));\n  }\n\n  isMasked(x, y) {\n    return Boolean(this.data[y * this.step + (x >> 2)] & (0b10 << ((x & 3) * 2)));\n  }\n\n  setAsMask(x, y, value = true) {\n    const p = y * this.step + (x >> 2);\n    const s = (x & 3) * 2;\n    this.data[p] &= ~(0b11 << s);\n    this.data[p] |= ((0b10 | Boolean(value)) << s);\n  }\n\n  setNoMask(x, y, value = true) {\n    const p = y * this.step + (x >> 2);\n    const s = (x & 3) * 2;\n    this.data[p] &= ~(0b11 << s);\n    this.data[p] |= (Boolean(value) << s);\n  }\n\n  xor(x, y, value = true) {\n    this.data[y * this.step + (x >> 2)] ^= (Boolean(value) << ((x & 3) * 2));\n  }\n\n  xorIfUnmasked(x, y, value = true) {\n    const p = y * this.step + (x >> 2);\n    this.data[p] ^= (Boolean(value) << ((x & 3) * 2)) & ~(this.data[p] >> 1);\n  }\n}\n","const LOG = new Uint8Array(512);\nLOG[0] = 1;\nfor (let i = 0, v = 1; i < 255; LOG[++i] = v) {\n  LOG[v + 256] = i;\n  v *= 2;\n  if (v & 256) {\n    v ^= 285;\n  }\n}\nconst e = (x) => LOG[x % 255]; // assume x is never negative\nconst ln = (x) => LOG[x + 256];\n\nexport function mult256PolyLn(p1Ln, p2Ln) {\n  const result = new Uint8Array(p1Ln.length + p2Ln.length - 1);\n  for (let i = 0; i < p1Ln.length; ++i) {\n    for (let j = 0; j < p2Ln.length; ++j) {\n      result[i + j] ^= e(p1Ln[i] + p2Ln[j]);\n    }\n  }\n  return result.map(ln);\n}\n\nexport function rem256Poly(num, denLn) {\n  const remainder = new Uint8Array(num.length + denLn.length - 1);\n  remainder.set(num, 0);\n  for (let i = 0; i < num.length; ++i) {\n    if (!remainder[i]) {\n      continue;\n    }\n    // assume denLn[0] === 0 (true for all generator polys)\n    const shift = ln(remainder[i]); // - denLn[0];\n    for (let j = 0; j < denLn.length; ++j) {\n      remainder[i + j] ^= e(denLn[j] + shift);\n    }\n  }\n  return remainder.slice(num.length);\n}\n","import { mult256PolyLn, rem256Poly } from './galoisPolynomial.mjs';\n\nconst generators = [[0], [0, 0]];\nfor (let i = 1, last = generators[1]; i < 30; ++i) {\n  const next = mult256PolyLn(last, [0, i]);\n  generators.push(next);\n  last = next;\n}\n\nfunction interleave(target, offset, blocks) {\n  /* eslint-disable no-param-reassign, no-loop-func */\n  let p = offset;\n  const lim = Math.max(...blocks.map((block) => block.length));\n  for (let i = 0; i < lim; ++i) {\n    blocks.forEach((block) => {\n      if (i < block.length) {\n        target[p++] = block[i];\n      }\n    });\n  }\n  /* eslint-enable no-param-reassign, no-loop-func */\n  return p;\n}\n\nexport default function calculateEC(versionData, { groups, ecsize }) {\n  const blocks = [];\n  const eccs = [];\n\n  let p = 0;\n  let size = 0;\n  groups.forEach(([nBlocks, bytes]) => {\n    for (let b = 0; b < nBlocks; ++b) {\n      const block = new Uint8Array(bytes);\n      for (let i = 0; i < bytes; ++i) {\n        block[i] = versionData.byte(p++);\n      }\n      blocks.push(block);\n      eccs.push(rem256Poly(block, generators[ecsize]));\n    }\n    size += nBlocks * (bytes + ecsize);\n  });\n\n  const result = new Uint8Array(size);\n  const pos = interleave(result, 0, blocks);\n  interleave(result, pos, eccs);\n  return result;\n}\n","function remBinPoly(num, den, denBits) {\n  let remainder = num << (denBits - 1);\n  for (let i = 0x40000000; i; i >>>= 1) {\n    if (remainder & i) {\n      remainder ^= den * (i >>> (denBits - 1));\n    }\n  }\n  return remainder;\n}\n\nfunction drawRect(code, x1, y1, x2, y2, value) {\n  for (let y = y1; y < y2; ++y) {\n    for (let x = x1; x < x2; ++x) {\n      code.setAsMask(x, y, value);\n    }\n  }\n}\n\nfunction drawRectOutline(code, x1, y1, x2, y2, value) {\n  drawRect(code, x1, y1, x2, y1 + 1, value);\n  drawRect(code, x1, y1 + 1, x1 + 1, y2, value);\n  drawRect(code, x2 - 1, y1 + 1, x2, y2, value);\n  drawRect(code, x1 + 1, y2 - 1, x2 - 1, y2, value);\n}\n\nfunction drawPlacement(code, x, y) {\n  drawRectOutline(code, x - 3, y - 3, x + 4, y + 4, true);\n  drawRectOutline(code, x - 2, y - 2, x + 3, y + 3, false);\n  drawRect(code, x - 1, y - 1, x + 2, y + 2, true);\n}\n\nfunction drawAlignment(code, x, y) {\n  drawRectOutline(code, x - 2, y - 2, x + 3, y + 3, true);\n  drawRectOutline(code, x - 1, y - 1, x + 2, y + 2, false);\n  code.setAsMask(x, y, true);\n}\n\nexport function drawFrame(code, version) {\n  const size = version * 4 + 17;\n  drawPlacement(code, 3, 3);\n  drawPlacement(code, size - 4, 3);\n  drawPlacement(code, 3, size - 4);\n  drawRect(code, 0, 7, 9, 9, false);\n  drawRect(code, 7, 0, 9, 7, false);\n  drawRect(code, size - 8, 7, size, 9, false);\n  drawRect(code, size - 8, 0, size - 7, 7, false);\n  drawRect(code, 7, size - 8, 9, size, false);\n  drawRect(code, 0, size - 8, 7, size - 7, false);\n  code.setAsMask(8, size - 8, true);\n  for (let i = 8; i < size - 8; ++i) {\n    code.setAsMask(i, 6, !(i & 1));\n    code.setAsMask(6, i, !(i & 1));\n  }\n  if (version >= 2) {\n    const numAlignment = Math.floor(version / 7) + 2;\n    const stepAlignment = (size - 13) / (numAlignment - 1);\n    for (let i = 0; i < numAlignment; ++i) {\n      for (let j = 0; j < numAlignment; ++j) {\n        if (\n          (i === 0 && j === 0) ||\n          (i === 0 && j === numAlignment - 1) ||\n          (i === numAlignment - 1 && j === 0)\n        ) {\n          continue;\n        }\n        drawAlignment(code, i * stepAlignment + 6, j * stepAlignment + 6);\n      }\n    }\n  }\n  if (version >= 7) {\n    const vInfo = (version << 12) | remBinPoly(version, 0b1111100100101, 13);\n    let m = 1 << 17;\n    for (let j = 6; (j--) > 0;) {\n      for (let i = 0; i < 3; ++i) {\n        const state = vInfo & m;\n        code.setAsMask(j, size - 9 - i, state);\n        code.setAsMask(size - 9 - i, j, state);\n        m >>>= 1;\n      }\n    }\n  }\n}\n\nexport function getPath(code) {\n  const w = code.width;\n  const h = code.height;\n  const result = [];\n  let dirY = -1;\n  let y = h;\n  for (let xB = w - 2; xB >= 0; xB -= 2) {\n    if (xB === 5) { // special case: skip vertical timing pattern line\n      xB = 4;\n    }\n    for (y += dirY; y !== -1 && y !== h; y += dirY) {\n      if (!code.isMasked(xB + 1, y)) {\n        result.push([xB + 1, y]);\n      }\n      if (!code.isMasked(xB, y)) {\n        result.push([xB, y]);\n      }\n    }\n    dirY *= -1;\n  }\n  return result;\n}\n\nexport function drawCode(target, path, data) {\n  let byte = 0;\n  let bit = 0b10000000;\n  path.forEach(([x, y]) => {\n    const v = data[byte] & bit;\n    target.setNoMask(x, y, v);\n    bit >>>= 1;\n    if (!bit) {\n      ++byte;\n      bit = 0b10000000;\n    }\n  });\n}\n\nexport function applyMask(target, mask, ecId) {\n  for (let y = 0; y < target.height; ++y) {\n    for (let x = 0; x < target.width; ++x) {\n      target.xorIfUnmasked(x, y, mask.fn(x, y));\n    }\n  }\n  const info = ((ecId << 3) | mask.id);\n  const pattern = 0b101010000010010 ^ ((info << 10) | remBinPoly(info, 0b10100110111, 11));\n  let chk = 0b100000000000000;\n  for (let i = 0; i < 7; ++i) {\n    const state = pattern & chk;\n    target.setAsMask(i === 6 ? 7 : i, 8, state);\n    target.setAsMask(8, target.height - i - 1, state);\n    chk >>>= 1;\n  }\n  for (let i = 0; i < 8; ++i) {\n    const state = pattern & chk;\n    target.setAsMask(8, (i > 1 ? 7 : 8) - i, state);\n    target.setAsMask(target.width - 8 + i, 8, state);\n    chk >>>= 1;\n  }\n}\n","function hv(code, state0, fn) {\n  for (let y = 0; y < code.height; ++y) {\n    let state = state0;\n    for (let x = 0; x < code.width; ++x) {\n      state = fn(state, code.get(x, y));\n    }\n  }\n  for (let x = 0; x < code.width; ++x) {\n    let state = state0;\n    for (let y = 0; y < code.height; ++y) {\n      state = fn(state, code.get(x, y));\n    }\n  }\n}\n\nfunction scoreLines(code) {\n  let score = 0;\n  hv(code, [0, undefined], ([consec, last], cur) => {\n    if (cur !== last) {\n      return [1, cur];\n    }\n    if (consec === 4) {\n      score += 3;\n    } else if (consec > 4) {\n      ++score;\n    }\n    return [consec + 1, last];\n  });\n  return score;\n}\n\nfunction countBoxes(code) {\n  let score = 0;\n  for (let x = 0; x < code.width - 1; ++x) {\n    let lastV = code.get(x, 0);\n    let lastM = code.get(x + 1, 0) === lastV;\n    for (let y = 0; y < code.height - 1; ++y) {\n      const curV = code.get(x, y);\n      const curM = code.get(x + 1, y) === curV;\n      if (lastM && curM && lastV === curV) {\n        ++score;\n      } else {\n        lastV = curV;\n        lastM = curM;\n      }\n    }\n  }\n  return score;\n}\n\nfunction countPatterns(code) {\n  let score = 0;\n  /* eslint-disable no-multi-spaces */\n  const begin   = 0b10000000000_10000000000;\n  const pattern = 0b10111010000_00001011101;\n  const end     = 0b00000000001_00000000001;\n  /* eslint-enable no-multi-spaces */\n  hv(code, 0, (state, cur) => {\n    const next = ((state >>> 1) | begin) & (pattern ^ (cur ? 0 : -1));\n    if (next & end) {\n      ++score;\n    }\n    return next;\n  });\n  return score;\n}\n\nfunction scoreImbalance(code) {\n  let totalOn = 0;\n  for (let y = 0; y < code.height; ++y) {\n    for (let x = 0; x < code.width; ++x) {\n      totalOn += code.get(x, y);\n    }\n  }\n  return Math.floor(20 * Math.abs(totalOn / (code.width * code.height) - 0.5)) * 10;\n}\n\nexport default function scoreCode(code) {\n  return (\n    scoreLines(code) +\n    countBoxes(code) * 3 +\n    countPatterns(code) * 40 +\n    scoreImbalance(code)\n  );\n}\n","import Bitmap1D from '../structures/Bitmap1D.mjs';\nimport Bitmap2D from '../structures/Bitmap2D.mjs';\nimport masks from './options/masks.mjs';\nimport { data as correctionData, names as correctionNames } from './options/corrections.mjs';\nimport calculateEC from './errorCorrection.mjs';\nimport {\n  drawFrame,\n  getPath,\n  drawCode,\n  applyMask,\n} from './draw.mjs';\nimport scoreCode from './score.mjs';\n\nconst EncodeEnd = (data) => data.addInt(0b0000, 4);\n\nconst baseCache = new Map();\n\nfunction getBase(version) {\n  if (!baseCache.has(version)) {\n    const size = version * 4 + 17;\n    const code = new Bitmap2D(size, size);\n    drawFrame(code, version);\n    const path = getPath(code);\n    baseCache.set(version, { code, path });\n  }\n  const cached = baseCache.get(version);\n  return {\n    code: new Bitmap2D(cached.code),\n    path: cached.path,\n  };\n}\n\nfunction pickMask(code, correction) {\n  let bestMasked = null;\n  let bestMaskScore = Number.POSITIVE_INFINITY;\n  masks.forEach((mask) => {\n    const masked = new Bitmap2D(code);\n    applyMask(masked, mask, correction.id);\n    const score = scoreCode(masked);\n    if (score < bestMaskScore) {\n      bestMasked = masked;\n      bestMaskScore = score;\n    }\n  });\n  return bestMasked;\n}\n\nexport default function generate(modeData, {\n  minCorrectionLevel = correctionNames.min,\n  maxCorrectionLevel = correctionNames.max,\n  minVersion = 1,\n  maxVersion = 40,\n  mask = null,\n} = {}) {\n  if (maxCorrectionLevel < minCorrectionLevel) {\n    throw new Error('Invalid correction level range');\n  }\n  if (maxVersion < minVersion) {\n    throw new Error('Invalid version range');\n  }\n\n  let dataLengthBits = 0;\n  for (let version = minVersion; version <= maxVersion; ++version) {\n    if (correctionData[minCorrectionLevel].v[version].capBits < dataLengthBits) {\n      continue;\n    }\n\n    const data = new Bitmap1D();\n    modeData(data, version);\n    dataLengthBits = data.bits;\n\n    for (let cl = maxCorrectionLevel; cl >= minCorrectionLevel; --cl) {\n      const correction = correctionData[cl];\n      const versionedCorrection = correction.v[version];\n      if (versionedCorrection.capBits < dataLengthBits) {\n        continue;\n      }\n      EncodeEnd(data);\n      data.padToByte();\n      while (data.bits < versionedCorrection.capBits) {\n        data.addInt(0b11101100_00010001, 16);\n      }\n      const { code, path } = getBase(version);\n      drawCode(code, path, calculateEC(data, versionedCorrection));\n      if (mask) {\n        applyMask(code, mask, correction.id);\n        return code;\n      }\n      return pickMask(code, correction);\n    }\n  }\n  throw new Error('Too much data');\n}\n"],"sourceRoot":""}