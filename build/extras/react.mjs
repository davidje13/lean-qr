const e=e=>{const r=new Error(`lean-qr error ${e}`);throw r.code=e,r},r=(e,r)=>r.map((r=>e[r])),n=["content","minCorrectionLevel","maxCorrectionLevel","minVersion","maxVersion","mask","modes"],t=[...n,"on","off","padX","padY"],o={"image-rendering":"pixelated"},s=({createElement:s,useEffect:c,useRef:a}=e(6),l=e(7))=>e=>{const m=a(null),i=a([null,{}]);return c((()=>{try{((e,r,n)=>n.some((n=>e[n]!==r[n])))(e,i.current[1],n)&&(i.current[0]=l(e.content,e)),i.current[0].toCanvas(m.current,e),m.current.hidden=!1}catch(e){console.warn(e.message),m.current.hidden=!0}i.current[1]=e}),r(e,t)),s("canvas",{ref:m,style:o,className:e.className})},c=e=>{try{return e()}catch(e){return void console.warn(e.message)}},a=({createElement:s,useMemo:a}=e(6),l=e(7),m=e(8))=>e=>{const i=a((()=>c((()=>l(e.content,e)))),r(e,n)),u=a((()=>i&&c((()=>m(i,e)))),[i,...r(e,t)]);return u?s("img",{src:u,style:o,className:e.className}):null};export{s as makeAsyncComponent,a as makeSyncComponent};
