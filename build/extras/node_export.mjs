import{deflateSync as e}from"node:zlib";const r=Buffer.from([137,80,78,71,13,10,26,10]),f=Buffer.from([]),t=(t,{on:o=[0,0,0],off:l=[0,0,0,0],padX:s=4,padY:a=4,scale:u=1}={})=>{const c=t.size*u,B=c+2*s*u,i=c+2*a*u,p=1+(B+7>>3),d=Buffer.alloc(i*p);for(let e=0;e<c;++e){const r=(a*u+e)*p+1;for(let f=0;f<c;++f)if(t.get(f/u|0,e/u|0)){const e=s*u+f;d[r+(e>>3)]|=128>>(7&e)}}const b=l[3]??255,m=o[3]??255,g=Buffer.alloc(13);return g.writeUInt32BE(B,0),g.writeUInt32BE(i,4),g[8]=1,g[9]=3,Buffer.concat([r,n(1229472850,g),n(1347179589,[l[0],l[1],l[2],o[0],o[1],o[2]]),(b&m)<255?n(1951551059,[b,m]):f,n(1229209940,e(d,{level:9})),n(1229278788,[])])},o=(e,r)=>"data:image/png;base64,"+t(e,r).toString("base64"),n=(e,r)=>{const f=r.length,t=Buffer.alloc(12+f);return t.writeUInt32BE(f,0),t.writeUInt32BE(e,4),t.set(r,8),t.writeUInt32BE(s(t.subarray(4,8+f)),8+f),t},l=new Uint32Array(256);for(let e=0;e<256;++e){let r=e;for(let e=0;e<8;++e)1&r?r=3988292384^r>>>1:r>>>=1;l[e]=r}const s=e=>{let r=-1;for(let f=0;f<e.length;++f)r=l[255&(r^e[f])]^r>>>8;return~r>>>0};export{t as toPngBuffer,o as toPngDataURL};
