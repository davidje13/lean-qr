"use strict";var e=require("node:zlib");const r=Buffer.from([137,80,78,71,13,10,26,10]),t=Buffer.from([]),f=(f,{on:n=[0,0,0],off:s=[0,0,0,0],padX:l=4,padY:u=4,scale:a=1}={})=>{const c=f.size*a,i=c+2*l*a,B=c+2*u*a,p=1+(i+7>>3),d=Buffer.alloc(B*p);for(let e=0;e<c;++e){const r=(u*a+e)*p+1;for(let t=0;t<c;++t)if(f.get(t/a|0,e/a|0)){const e=l*a+t;d[r+(e>>3)]|=128>>(7&e)}}const b=s[3]??255,g=n[3]??255,v=Buffer.alloc(13);return v.writeUInt32BE(i,0),v.writeUInt32BE(B,4),v[8]=1,v[9]=3,Buffer.concat([r,o(1229472850,v),o(1347179589,[s[0],s[1],s[2],n[0],n[1],n[2]]),(b&g)<255?o(1951551059,[b,g]):t,o(1229209940,e.deflateSync(d,{level:9})),o(1229278788,[])])},o=(e,r)=>{const t=r.length,f=Buffer.alloc(12+t);return f.writeUInt32BE(t,0),f.writeUInt32BE(e,4),f.set(r,8),f.writeUInt32BE(s(f.subarray(4,8+t)),8+t),f},n=new Uint32Array(256);for(let e=0;e<256;++e){let r=e;for(let e=0;e<8;++e)1&r?r=3988292384^r>>>1:r>>>=1;n[e]=r}const s=e=>{let r=-1;for(let t=0;t<e.length;++t)r=n[255&(r^e[t])]^r>>>8;return~r>>>0};exports.toPngBuffer=f,exports.toPngDataURL=(e,r)=>"data:image/png;base64,"+f(e,r).toString("base64");
