"use strict";var e=require("node:zlib");const r=Buffer.from([137,80,78,71,13,10,26,10]),t=Buffer.from([]),f=(f,{on:a=[0,0,0],off:n=[0,0,0,0],padX:s=4,padY:l=4,scale:u=1}={})=>{const c=(f.size+2*s)*u,B=(f.size+2*l)*u,i=1+(c+7>>3),p=Buffer.alloc(B*i);for(let e=0;e<B;++e)for(let r=0;r<c;++r)f.get(Math.floor(r/u)-s,Math.floor(e/u)-l)&&(p[e*i+1+(r>>3)]|=128>>(7&r));const d=n[3]??255,b=a[3]??255,g=(d&b)<255,h=n[0]|n[1]|n[2]||(a[0]&a[1]&a[2])<255||g,v=Buffer.alloc(13);return v.writeUInt32BE(c,0),v.writeUInt32BE(B,4),v[8]=1,v[9]=h?3:0,Buffer.concat([r,o(1229472850,v),h?o(1347179589,[n[0],n[1],n[2],a[0],a[1],a[2]]):t,g?o(1951551059,[d,b]):t,o(1229209940,e.deflateSync(p,{level:9})),o(1229278788,[])])},o=(e,r)=>{const t=r.length,f=Buffer.alloc(12+t);f.writeUInt32BE(t,0),f.writeUInt32BE(e,4),f.set(r,8);let o=-1;for(const e of f.subarray(4,8+t))o=a[255&(o^e)]^o>>>8;return f.writeUInt32BE(~o>>>0,8+t),f},a=new Uint32Array(256);for(let e=0;e<256;++e){let r=e;for(let e=0;e<8;++e)r=3988292384*(1&r)^r>>>1;a[e]=r}exports.toPngBuffer=f,exports.toPngDataURL=(e,r)=>"data:image/png;base64,"+f(e,r).toString("base64");
